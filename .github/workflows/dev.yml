name: Deploy to the DEV-server
on:
    push:
      branches: [ "dev" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.11'

      - name: Create .env file
        run: cp MoiGoroda/.env.example MoiGoroda/.env

      - name: Poetry install
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Set up Poetry
        run: poetry install --no-interaction --no-root && poetry install --no-interaction

      - name: Test with pytest
        run: |
          poetry run pytest --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
  deploy:
    needs: test
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v1
      - name: Deploy to the DEV-server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV__SSH_HOST }}
          username: ${{ secrets.DEV__SSH_USER }}
          key: ${{ secrets.DEV__SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.DEV__LOCAL_PATH }}
            git pull origin dev
            git checkout dev
            ${{ secrets.DEV__POETRY_PATH }} install
            ${{ secrets.DEV__POETRY_PATH }} run python3 manage.py makemigrations
            ${{ secrets.DEV__POETRY_PATH }} run python3 manage.py migrate
            export POETRY_PATH=${{ secrets.DEV__POETRY_PATH }}
            chmod +x ./scripts/collectstatic.sh
            ./scripts/collectstatic.sh
            chmod -x ./scripts/collectstatic.sh
            chmod +x ./scripts/restart.sh
            export SUDO_PASSWORD=${{ secrets.DEV__SUDO_PASSWORD }}
            ./scripts/restart.sh
            chmod -x ./scripts/restart.sh
