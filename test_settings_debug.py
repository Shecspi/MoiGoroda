#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Django –≤ CI/CD
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent))

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'MoiGoroda.settings')

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env –≤—Ä—É—á–Ω—É—é –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
from dotenv import load_dotenv

env_path = Path(__file__).parent / 'MoiGoroda' / '.env'
print(f'üîç –ó–∞–≥—Ä—É–∂–∞–µ–º .env –∏–∑: {env_path}')
print(f'üìÅ .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {env_path.exists()}')

if env_path.exists():
    with open(env_path, 'r') as f:
        print('\nüìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ .env:')
        for line in f:
            if line.strip() and not line.startswith('#'):
                key = line.split('=')[0]
                if key in ['DEBUG', 'TESTING', 'DATABASE_ENGINE', 'DATABASE_NAME']:
                    print(f'  {line.strip()}')

load_dotenv(env_path)

print(f'\nüîß –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ load_dotenv:')
print(f'  DEBUG from env: {os.getenv("DEBUG")}')
print(f'  TESTING from env: {os.getenv("TESTING")}')
print(f'  DATABASE_ENGINE from env: {os.getenv("DATABASE_ENGINE")}')

# –ü—Ä–æ–≤–µ—Ä—è–µ–º sys.argv
print(f'\nüìã sys.argv: {sys.argv}')
print(f"  'test' in sys.argv: {'test' in sys.argv}")
print(f"  'pytest' in sys.modules: {'pytest' in sys.modules}")

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django
import django

django.setup()

from django.conf import settings

print(f'\n‚öôÔ∏è  Django Settings:')
print(f'  settings.DEBUG: {settings.DEBUG}')
print(f"  settings.DATABASES['default']['ENGINE']: {settings.DATABASES['default']['ENGINE']}")
print(
    f"  settings.DATABASES['default']['NAME']: {settings.DATABASES['default'].get('NAME', 'not set')}"
)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º TESTING –∏–∑ settings
from MoiGoroda.settings import TESTING

print(f'  TESTING variable: {TESTING}')

print('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
