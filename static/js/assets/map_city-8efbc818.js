var E=Object.defineProperty;var N=(o,t,e)=>t in o?E(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var u=(o,t,e)=>(N(o,typeof t!="symbol"?t+"":t,e),e);let v,y,p,m=[];const I="#6382ff",P="#0033ff";const b={fillOpacity:.1,fillColor:I,weight:2,color:P,opacity:.3};function x(){const o=L.map("map",{attributionControl:!1,zoomControl:!1});return B(o),A(o),Y(o),$(o),o}function Y(o){o.addControl(new L.Control.Fullscreen({title:{false:"Полноэкранный режим",true:"Выйти из полноэкранного режима"}}))}function A(o){L.control.zoom({zoomInTitle:"Нажмите, чтобы приблизить карту",zoomOutTitle:"Нажмите, чтобы отдалить карту"}).addTo(o)}function B(o){L.control.attribution().addTo(o).setPrefix(""),L.tileLayer(window.TILE_LAYER,{maxZoom:19,attribution:'Используются карты &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> под лицензией <a href="https://opendatacommons.org/licenses/odbl/">ODbL.</a>'}).addTo(o)}function $(o){L.simpleMapScreenshoter().addTo(o)}function D(o){const t=new L.Control({position:"topright"});t.onAdd=function(e){let n=L.DomUtil.create("div","custom-control-for-map");return n.title="Отобразить внешние границы России",n.innerHTML='<i class="fa-regular fa-square"></i>',n.addEventListener("click",()=>{v===void 0?fetch("https://geo-polygons.ru/country/hq/RU").then(i=>{if(!i.ok)throw new Error("Ошибка при получении полигонов страны");return i.json()}).then(i=>{_(p,m),p=L.geoJSON(i,{style:b}),p.addTo(e),v=i}):(_(p,m),p=L.geoJSON(v,{style:b}),p.addTo(e))}),n},t.addTo(o)}function R(o){const t=new L.Control({position:"topright"});t.onAdd=function(e){let n=L.DomUtil.create("div","custom-control-for-map");return n.title="Отобразить границы регионов России",n.innerHTML='<i class="fa-regular fa-square-plus"></i>',n.addEventListener("click",()=>{y===void 0?fetch(`${URL_GEO_POLYGONS}/region/lq/RU/all`).then(i=>{if(!i.ok)throw new Error("Ошибка при получении полигонов страны");return i.json()}).then(i=>{_(p,m),i.forEach(s=>{const a=L.geoJSON(s,{style:b}).addTo(e);m.push(a)}),y=i}):(_(p,m),y.forEach(i=>{const s=L.geoJSON(i,{style:b}).addTo(e);m.push(s)}))}),n},t.addTo(o)}function _(o,t){o!==void 0&&o.clearLayers(),t!==void 0&&t.forEach(e=>{e.clearLayers()})}const U=L.divIcon({className:"custom-icon-visited-pin",html:'<i class="fa-solid fa-location-dot fs-3 icon-visited-pin" style="color: rgb(66,178,66) !important; text-shadow: 0 0 2px #333333;"></i>',iconSize:[21,28],iconAnchor:[10.5,28],popupAnchor:[0,-28],tooltipAnchor:[0,-28]}),W=L.divIcon({className:"custom-icon-not_visited-pin",html:'<i class="fa-solid fa-location-dot fs-3 icon-not-visited-pin" style="color: rgb(210, 90, 90) !important; text-shadow: 0 0 2px #333333;"></i>',iconSize:[21,28],anchor:[10.5,28],iconAnchor:[10.5,28],popupAnchor:[0,-28],tooltipAnchor:[0,-28]}),z=L.divIcon({className:"custom-icon-together-pin",html:'<i class="fa-solid fa-location-dot fs-3 icon-together-pin" style="color: rgb(38,122,10) !important; text-shadow: 0 0 2px #333333;"></i>',iconSize:[21,28],anchor:[10.5,28],iconAnchor:[10.5,28],popupAnchor:[0,-28],tooltipAnchor:[0,-28]}),H=L.divIcon({className:"custom-icon-subscription-pin",html:'<i class="fa-solid fa-location-dot fs-3  icon-subscription-pin" style="color: rgb(230, 150, 30) !important; text-shadow: 0 0 2px #333333;"></i>',iconSize:[21,28],anchor:[10.5,28],iconAnchor:[10.5,28],popupAnchor:[0,-28],tooltipAnchor:[0,-28]}),G=L.divIcon({className:"custom-icon-place-pin",html:'<i class="fa-solid fa-location-dot fs-3  icon-subscription-pin" style="color: rgb(11,83,213) !important; text-shadow: 0 0 2px #333333;"></i>',iconSize:[21,28],anchor:[10.5,28],iconAnchor:[10.5,28],popupAnchor:[0,-28],tooltipAnchor:[0,-28]});L.divIcon({className:"custom-icon-place-pin",html:'<i class="fa-solid fa-location-dot fs-3  icon-subscription-pin" style="color: rgb(220,66,217) !important; text-shadow: 0 0 2px #333333;"></i>',iconSize:[21,28],anchor:[10.5,28],iconAnchor:[10.5,28],popupAnchor:[0,-28],tooltipAnchor:[0,-28]});class w{constructor(){u(this,"id");u(this,"name");u(this,"region");u(this,"lat");u(this,"lon");u(this,"first_visit_date");u(this,"last_visit_date");u(this,"number_of_visits");u(this,"visit_years")}}const l={OWN:"own",TOGETHER:"together",SUBSCRIPTION:"subscription",NOT_VISITED:"not_visited"},T=new bootstrap.Modal(document.getElementById("modal_add_city"),{backdrop:!0});function F(o,t,e){const n=document.getElementById("city-title-in-modal"),i=document.getElementById("region-title-in-modal"),s=document.getElementById("city-id");n.innerText=o,i.innerText=e,s.setAttribute("value",t),T.toggle()}function j(o){const t=document.getElementById("declension-visited"),e=document.getElementById("declension-qty-visited"),n=document.getElementById("declension-visited-city"),i=e.textContent,s=o===!0?Number(i)+1:i;e.innerText=s.toString(),t.innerText=X(q(s)),n.innerText=J(s)}function q(o){return o.toString().endsWith("1")&&!o.toString().endsWith("11")?"посещён":"посещено"}function J(o){const t=o.toString();return 10<=Number(t.slice(-2))&&Number(t.slice(-2))<=20||["5","6","7","8","9","0"].includes(t.slice(-1))?"городов":["2","3","4"].includes(t.slice(-1))?"города":(t.slice(-1)==="1","город")}function X(o){return o.charAt(0).toUpperCase()+o.slice(1).toLowerCase()}class f{constructor(t,e,n){this.button=document.getElementById(t),this.style_on=e,this.style_off=n}get_element(){return this.button}off(){this.button.dataset.type="show",this.button.classList.remove(this.style_on),this.button.classList.add(this.style_off)}on(){this.button.dataset.type="hide",this.button.classList.remove(this.style_off),this.button.classList.add(this.style_on)}disable(){this.button.classList.add("disabled")}enable(){this.button.classList.remove("disabled")}}window.open_modal_for_add_city=F;class Q{constructor(t,e){this.myMap=t,this.ownCities=e,this.subscriptionCities=[],this.notVisitedCities=[],this.stateOwnCities=new Map,this.stateSubscriptionCities=new Map,this.stateNotVisitedCities=new Map,this.allPlaceMarkers=[],this.btnShowSubscriptionCities=new f("btn_show-subscriptions-cities","btn-success","btn-outline-success"),this.elementShowSubscriptionCities=this.btnShowSubscriptionCities.get_element(),this.btnShowPlaces=new f("btn_show-places","btn-primary","btn-outline-primary"),this.elementShowPlaces=this.btnShowPlaces.get_element(),this.btnShowNotVisitedCities=new f("btn_show-not-visited-cities","btn-danger","btn-outline-danger"),this.elementShowNotVisitedCities=this.btnShowNotVisitedCities.get_element(),this.btnShowVisitedCitiesPreviousYear=new f("btn_show-visited-cities-previous-year","btn-primary","btn-outline-primary"),this.elementShowVisitedCitiesPreviousYear=this.btnShowVisitedCitiesPreviousYear.get_element(),this.btnShowVisitedCitiesCurrentYear=new f("btn_show-visited-cities-current-year","btn-success","btn-outline-success"),this.elementShowVisitedCitiesCurrentYear=this.btnShowVisitedCitiesCurrentYear.get_element(),this.set_handlers()}set_handlers(){this.elementShowSubscriptionCities.addEventListener("click",()=>{this.showSubscriptionCities(),this.btnShowVisitedCitiesPreviousYear.off(),this.btnShowVisitedCitiesCurrentYear.off()}),this.elementShowPlaces.addEventListener("click",()=>{this.elementShowPlaces.dataset.type==="show"?(this.showPlaces(),this.btnShowPlaces.on()):(this.hidePlaces(),this.btnShowPlaces.off())}),this.elementShowNotVisitedCities.addEventListener("click",()=>{this.elementShowNotVisitedCities.dataset.type==="show"?(this.showNotVisitedCities(),this.btnShowNotVisitedCities.on()):(this.hideNotVisitedCities(),this.btnShowNotVisitedCities.off())}),this.elementShowVisitedCitiesPreviousYear.addEventListener("click",()=>{this.elementShowVisitedCitiesPreviousYear.dataset.type==="show"?(this.showVisitedCitiesPreviousYear(),this.btnShowVisitedCitiesPreviousYear.on(),this.btnShowNotVisitedCities.off(),this.btnShowNotVisitedCities.disable(),this.btnShowVisitedCitiesCurrentYear.off()):(this.hideVisitedCitiesPreviousYear(),this.btnShowVisitedCitiesPreviousYear.off(),this.btnShowNotVisitedCities.enable())}),this.elementShowVisitedCitiesCurrentYear.addEventListener("click",()=>{this.elementShowVisitedCitiesCurrentYear.dataset.type==="show"?(this.showVisitedCitiesCurrentYear(),this.btnShowVisitedCitiesCurrentYear.on(),this.btnShowNotVisitedCities.off(),this.btnShowNotVisitedCities.disable(),this.btnShowVisitedCitiesPreviousYear.off()):(this.hideVisitedCitiesCurrentYear(),this.btnShowVisitedCitiesCurrentYear.off(),this.btnShowNotVisitedCities.enable())})}async showSubscriptionCities(){const t=this.elementShowSubscriptionCities.dataset.url;let e=document.querySelectorAll("input.checkbox_username:checked"),i={id:Array.from(e).map(r=>Number(r.value))},s=document.getElementById("btn_show-subscriptions-cities");s.disabled=!0,s.innerHTML='<span class="spinner-border spinner-border-sm" aria-hidden="true"></span>&nbsp;&nbsp;&nbsp;<span role="status">Загрузка...</span>';let a=await fetch(t+"?data="+encodeURIComponent(JSON.stringify(i)),{method:"GET",headers:{"Content-Type":"application/json","X-CSRFToken":getCookie("csrftoken")}});if(a.ok){let r=document.getElementById("subscriptions_modal_window");bootstrap.Modal.getInstance(r).hide(),this.removeOwnMarkers(),this.removeSubscriptionMarkers(),this.removeNotVisitedMarkers(),this.stateOwnCities.clear(),this.stateSubscriptionCities.clear(),this.stateNotVisitedCities.clear(),this.subscriptionCities=await a.json(),this.addOwnCitiesOnMap(),this.addSubscriptionsCitiesOnMap(),this.elementShowNotVisitedCities.dataset.type==="hide"&&this.addNotVisitedCitiesOnMap()}else{const r=document.getElementById("toast_validation_error");new bootstrap.Toast(r).show()}return s.disabled=!1,s.innerText="Применить",!1}async showNotVisitedCities(){const t=this.elementShowNotVisitedCities.dataset.url;if(this.notVisitedCities.length===0){let e=await fetch(t,{method:"GET",headers:{"X-CSRFToken":getCookie("csrftoken")}});if(e.ok)this.notVisitedCities=await e.json(),this.addNotVisitedCitiesOnMap();else return showDangerToast("Ошибка","Произошла ошибка при загрузке данных"),!1}else this.addNotVisitedCitiesOnMap()}showPlaces(){this.allPlaceMarkers.length>0?this.allPlaceMarkers.forEach(t=>{t.addTo(this.myMap)}):fetch("/api/place/").then(t=>{if(!t.ok)throw new Error("Произошла ошибка при получении данных с сервера");return t.json()}).then(t=>{t.forEach(e=>{const n=L.marker([e.latitude,e.longitude],{icon:G}).addTo(this.myMap);n.bindTooltip(e.name,{direction:"top"}),n.setZIndexOffset(5e4),this.allPlaceMarkers.push(n)})})}hidePlaces(){this.allPlaceMarkers.forEach(t=>{this.myMap.removeLayer(t)})}showVisitedCitiesPreviousYear(){this.removeOwnMarkers(),this.removeSubscriptionMarkers(),this.removeNotVisitedMarkers(),this.stateOwnCities.clear(),this.stateSubscriptionCities.clear(),this.addOwnCitiesOnMap(new Date().getFullYear()-1),this.addSubscriptionsCitiesOnMap(new Date().getFullYear()-1)}showVisitedCitiesCurrentYear(){this.removeOwnMarkers(),this.removeSubscriptionMarkers(),this.removeNotVisitedMarkers(),this.stateOwnCities.clear(),this.stateSubscriptionCities.clear(),this.addOwnCitiesOnMap(new Date().getFullYear()),this.addSubscriptionsCitiesOnMap(new Date().getFullYear())}hideVisitedCitiesPreviousYear(){this.removeOwnMarkers(),this.removeSubscriptionMarkers(),this.removeNotVisitedMarkers(),this.stateOwnCities.clear(),this.stateSubscriptionCities.clear(),this.addOwnCitiesOnMap(),this.addSubscriptionsCitiesOnMap()}hideVisitedCitiesCurrentYear(){this.removeOwnMarkers(),this.removeSubscriptionMarkers(),this.removeNotVisitedMarkers(),this.stateOwnCities.clear(),this.stateSubscriptionCities.clear(),this.addOwnCitiesOnMap(),this.addSubscriptionsCitiesOnMap()}hideNotVisitedCities(){this.removeNotVisitedMarkers(),this.stateNotVisitedCities.clear()}addSubscriptionsCitiesOnMap(t){let e=this.getUsersWhoVisitedCity();const n=this.ownCities.reduce((i,{title:s,first_visit_date:a,last_visit_date:r,visit_years:h})=>(i[s]={visit_years:h,first_visit_date:a,last_visit_date:r},i),{});for(let i=0;i<this.subscriptionCities.length;i++){const s=new w;if(s.id=this.subscriptionCities[i].id,s.name=this.subscriptionCities[i].title,s.region=this.subscriptionCities[i].region_title,s.lat=this.subscriptionCities[i].lat,s.lon=this.subscriptionCities[i].lon,s.visit_years=n[s.name]?n[s.name].visit_years:void 0,s.first_visit_date=n[s.name]?n[s.name].first_visit_date:void 0,s.last_visit_date=n[s.name]?n[s.name].last_visit_date:void 0,this.ownCities.forEach(h=>{s.id===h.id&&(s.date_of_first_visit=h.date_of_first_visit,s.number_of_visits=h.number_of_visits)}),t!==void 0&&(!this.subscriptionCities[i].visit_years||!this.subscriptionCities[i].visit_years.includes(t))||this.stateSubscriptionCities.has(s.id))continue;let a;this.stateOwnCities.has(s.id)?(this.myMap.removeLayer(this.stateOwnCities.get(s.id)),a=l.TOGETHER):a=l.SUBSCRIPTION;const r=this.addMarkerToMap(s,a,e.get(s.id));this.stateSubscriptionCities.set(s.id,r)}}addOwnCitiesOnMap(t){const e=[];for(let n=0;n<this.ownCities.length;n++){const i=new w;if(i.id=this.ownCities[n].id,i.name=this.ownCities[n].title,i.region=this.ownCities[n].region_title,i.lat=this.ownCities[n].lat,i.lon=this.ownCities[n].lon,i.visit_years=this.ownCities[n].visit_years,i.first_visit_date=this.ownCities[n].first_visit_date,i.last_visit_date=this.ownCities[n].last_visit_date,i.number_of_visits=this.ownCities[n].number_of_visits,t!==void 0&&(!i.visit_years||!i.visit_years.includes(t)))continue;let s=this.addMarkerToMap(i,l.OWN);e.push(s),this.stateOwnCities.set(i.id,s)}return e}addNotVisitedCitiesOnMap(){for(let t=0;t<this.notVisitedCities.length;t++){const e=new w;if(e.id=this.notVisitedCities[t].id,e.name=this.notVisitedCities[t].title,e.region=this.notVisitedCities[t].region_title,e.lat=this.notVisitedCities[t].lat,e.lon=this.notVisitedCities[t].lon,!this.stateOwnCities.has(e.id)&&!this.stateSubscriptionCities.has(e.id)){const n=this.addMarkerToMap(e,l.NOT_VISITED);this.stateNotVisitedCities.set(e.id,n)}}}addMarkerToMap(t,e,n){let i,s;switch(e){case l.OWN:i=U,s=4e4;break;case l.NOT_VISITED:i=W,s=0;break;case l.SUBSCRIPTION:i=H,s=2e4;break;case l.TOGETHER:i=z,s=3e4;break}const a=L.marker([t.lat,t.lon],{icon:i}).addTo(this.myMap);a.setZIndexOffset(s);let r="";r+=`<div><span class="fw-semibold fs-3"><a href="/city/${t.id}" target="_blank" rel="noopener noreferrer" class="link-offset-2 link-underline-dark link-dark link-underline-opacity-50-hover link-opacity-50-hover">${t.name}</a></span></div>`,r+=`<div class="mt-2"><small class="text-secondary fw-medium fs-6">${t.region}</small></div>`;let h=`<a href="#" onclick="open_modal_for_add_city('${t.name}', '${t.id}', '${t.region}')">Отметить как посещённый</a>`,k=`<a href="#" onclick="open_modal_for_add_city('${t.name}', '${t.id}', '${t.region}')">Добавить ещё одно посещение</a>`;const d=t.first_visit_date?new Date(t.first_visit_date).toLocaleDateString():void 0,c=t.last_visit_date?new Date(t.last_visit_date).toLocaleDateString():void 0;t.visit_years&&t.visit_years;const V=t.number_of_visits;return e===l.SUBSCRIPTION?(r+="<p>Вы не были в этом городе</p>",r+=`<p>Пользователи, посетившие город:<br> ${n.join(", ")}</p><hr>${h}`):e===l.TOGETHER?(r+=`<p>Пользователи, посетившие город:<br> ${n.join(", ")}</p>`,d!==void 0&&c!==void 0&&d===c?r+=`<p><span class='fw-semibold'>Дата посещения:</span> ${d||"Не указана"}</p>`:d!==void 0&&c!==void 0&&d!==c&&(r+=`<p><span class='fw-semibold'>Дата первого посещения:</span> ${d||"Не указана"}</p>`,r+=`<p><span class='fw-semibold'>Дата последнего посещения:</span> ${c||"Не указана"}</p>`),r+=`<p><span class='fw-semibold'>Всего посещений: ${V}</span></p><hr>${k}`):e===l.NOT_VISITED?r+=`<p>Вы не были в этом городе</p><hr>${h}`:(d!==void 0&&c!==void 0&&d===c?r+=`<p><span class='fw-semibold'>Дата посещения:</span> ${d||"Не указана"}</p>`:d!==void 0&&c!==void 0&&d!==c&&(r+=`<p><span class='fw-semibold'>Дата первого посещения:</span> ${d||"Не указана"}</p>`,r+=`<p><span class='fw-semibold'>Дата последнего посещения:</span> ${c||"Не указана"}</p>`),r+=`<p><span class='fw-semibold'>Всего посещений:</span> ${V}</p><hr>${k}`),a.bindPopup(r),a.bindTooltip(t.name,{direction:"top"}),a.on("mouseover",function(){const M=this.getTooltip();this.isPopupOpen()?M.setOpacity(0):M.setOpacity(.9)}),a.on("click",function(){this.getTooltip().setOpacity(0)}),a}updateMarker(t){const e=t.id;if(this.stateNotVisitedCities.has(e)){let n=this.stateNotVisitedCities.get(e);this.stateNotVisitedCities.delete(e),this.myMap.removeLayer(n),this.ownCities.push(t),this.stateOwnCities.set(e,n),this.addMarkerToMap(t,l.OWN)}else if(this.stateSubscriptionCities.has(e)){let n=this.stateSubscriptionCities.get(e);this.stateSubscriptionCities.delete(e),this.myMap.removeLayer(n),this.ownCities.push(t);let i=this.getUsersWhoVisitedCity(),s=this.addMarkerToMap(t,l.TOGETHER,i.get(e));this.stateSubscriptionCities.set(e,s)}else if(this.stateOwnCities.has(e)){let n=this.stateOwnCities.get(t.id);this.stateOwnCities.delete(t.id),this.myMap.removeLayer(n);for(let s=0;s<this.ownCities.length;s++)if(this.ownCities[s].id===e){this.ownCities[s].number_of_visits=t.number_of_visits,this.ownCities[s].first_visit_date=t.first_visit_date,this.ownCities[s].last_visit_date=t.last_visit_date,this.ownCities[s].visit_dates=t.visit_dates;break}const i=this.addMarkerToMap(t,l.OWN);this.stateOwnCities.set(e,i)}else throw new Error(`Неизвестное состояние добавленного города с ID ${e}`)}removeOwnMarkers(){for(let[t,e]of this.stateOwnCities.entries())this.myMap.removeLayer(e)}removeSubscriptionMarkers(){for(let[t,e]of this.stateSubscriptionCities.entries())this.myMap.removeLayer(e)}removeNotVisitedMarkers(){for(let[t,e]of this.stateNotVisitedCities.entries())this.myMap.removeLayer(e)}getUsersWhoVisitedCity(){let t=new Map;for(let e=0;e<this.subscriptionCities.length;e++){let n=this.subscriptionCities[e];t.has(n.id)||(t.set(n.id,[]),this.stateOwnCities.has(n.id)&&t.get(n.id).push("Вы")),t.get(n.id).push(n.username)}return t}}function Z(o,t){const e=document.getElementById("toast-success"),n=new bootstrap.Toast(e),i=document.getElementById("toast-success-title"),s=document.getElementById("toast-success-message");i.innerHTML=o,s.innerHTML=t,n.show()}function O(o,t){const e=document.getElementById("toast-danger"),n=new bootstrap.Toast(e),i=document.getElementById("toast-danger-title"),s=document.getElementById("toast-danger-message");i.innerHTML=o,s.innerHTML=t,n.show()}let g,C;window.onload=()=>{C=x(),D(C),R(C),K().then(o=>{g=new Q(C,o);const t=g.addOwnCitiesOnMap(),e=new L.featureGroup([...t]);C.fitBounds(e.getBounds())})};async function K(){let o=window.URL_GET_VISITED_CITIES;return fetch(o,{method:"GET",headers:{"X-CSRFToken":getCookie("csrftoken")}}).then(t=>t.json()).then(t=>t)}const S=document.getElementById("form-add-city");S.addEventListener("submit",o=>{o.preventDefault();const t=new FormData(S);t.set("has_magnet",t.has("has_magnet")?"1":"0");let e=document.getElementById("btn_add-visited-city");e.disabled=!0,e.innerHTML='<span class="spinner-border spinner-border-sm" aria-hidden="true"></span>&nbsp;&nbsp;&nbsp;<span role="status">Загрузка...</span>';const n=e.dataset.url;fetch(n,{method:"POST",headers:{"X-CSRFToken":getCookie("csrftoken")},body:t}).then(i=>{if(!i.ok){const s=new Error(`HTTP error! status: ${i.status}`);throw s.status=i.status,s}return i.json()}).then(i=>{T.hide(),e.disabled=!1,e.innerText="Добавить",S.reset(),Z("Успешно",`Город ${i.city.city_title} успешно добавлен как посещённый`);const s=new w;s.id=i.city.city,s.name=i.city.city_title,s.region=i.city.region_title,s.lat=i.city.lat,s.lon=i.city.lon,s.number_of_visits=i.city.number_of_visits,s.first_visit_date=i.city.first_visit_date,s.last_visit_date=i.city.last_visit_date;const a=s.number_of_visits===1;g.updateMarker(s),j(a)}).catch(i=>{console.log(i),i.status===409?O("Ошибка","Вы уже посещали город в указанную дату"):O("Ошибка","Что-то пошло не так. Попробуйте ещё раз."),e.disabled=!1,e.innerText="Добавить"})});
