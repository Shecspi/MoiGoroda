# Generated by Django 4.2.21 on 2025-06-17 11:45
from django.db import migrations, models
from django.db.migrations import RunPython
from django.db.models import PROTECT


def fill_region_type(apps, schema_editor):
    RegionType = apps.get_model('region', 'RegionType')

    TYPES_OF_REGIONS = {
        'R': 'республика',
        'K': 'край',
        'O': 'область',
        'G': 'город федерального значения',
        'AOb': 'автономная область',
        'AOk': 'автономный округ',
    }

    for item in TYPES_OF_REGIONS.items():
        RegionType.objects.create(title=item[1].capitalize())


def change_region_type(apps, schema_editor):
    Region = apps.get_model('region', 'Region')
    RegionType = apps.get_model('region', 'RegionType')

    TYPES_OF_REGIONS = {
        'R': 'республика',
        'K': 'край',
        'O': 'область',
        'G': 'город федерального значения',
        'AOb': 'автономная область',
        'AOk': 'автономный округ',
    }

    for region in Region.objects.all():
        t = TYPES_OF_REGIONS[region.type]
        region_type = RegionType.objects.get(title=t.capitalize())
        region.type = region_type.id
        region.save()


class Migration(migrations.Migration):
    dependencies = [
        ('region', '0006_region_full_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='RegionType',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('title', models.CharField(max_length=100, verbose_name='Название типа')),
            ],
            options={
                'verbose_name': 'Тип региона',
                'verbose_name_plural': 'Типы регионов',
                'ordering': ['title'],
            },
        ),
        RunPython(fill_region_type),
        RunPython(change_region_type),
        migrations.AlterField(
            model_name='region',
            name='type',
            field=models.ForeignKey(
                on_delete=PROTECT,
                to='region.regiontype',
                verbose_name='Тип субъекта',
            ),
        ),
    ]
